// Generated by CoffeeScript 1.7.1
(function() {
  var Gists;

  Gists = (function() {
    Gists.prototype.api = "https://api.github.com";

    function Gists() {
      this.username = $.cookie("gh_user");
      this.key = $.cookie("gh_key");
      if (!this.username) {
        return;
      }
      if (this.username && this.key) {
        this.setCredentials();
      }
      $.ajax({
        type: "GET",
        url: this.api + "/gists?per_page=200",
        beforeSend: (function(_this) {
          return function(xhr) {
            return _this.authBeforeSend(xhr);
          };
        })(this),
        success: (function(_this) {
          return function(data) {
            console.log("Gist data", data);
            return _this.display(data);
          };
        })(this)
      });
    }

    Gists.prototype.display = function(data) {
      var d, div, h, headings, table, tr, _i, _j, _len, _len1, _results;
      div = $("#list-gists");
      div.append("<h2>Gists" + (this.username ? ": " + this.username : "") + "</h2>");
      div.append("<p>Gray links are secret gists.</p>");
      table = $("<table>");
      div.append(table);
      headings = ["Comments", "Description", "Created", "Updated"];
      for (_i = 0, _len = headings.length; _i < _len; _i++) {
        h = headings[_i];
        table.append("<th>" + h + "</th>");
      }
      _results = [];
      for (_j = 0, _len1 = data.length; _j < _len1; _j++) {
        d = data[_j];
        tr = $("<tr>");
        table.append(tr);
        this.cell(tr, (d.comments ? d.comments : ""));
        this.link(tr, d);
        this.cell(tr, this.date(d.created_at));
        _results.push(this.cell(tr, this.date(d.updated_at)));
      }
      return _results;
    };

    Gists.prototype.link = function(tr, d) {
      var a, a2, desc, m, p, re, td;
      td = $("<td>");
      tr.append(td);
      re = /\[http:/;
      m = d.description.match(re);
      desc = m.index ? d.description.substring(0, m.index - 1) : d.description;
      if (m.index) {
        p = d.description.substring(m.index + 1).slice(0, -1);
      }
      a = $("<a>", {
        "class": (d["public"] ? "public-gist-link" : "secret-gist-link"),
        href: d.html_url,
        target: "_blank",
        text: desc
      });
      td.append(a);
      if (p) {
        a2 = $("<a>", {
          "class": "app-link",
          href: p,
          target: "_blank",
          text: "[" + p + "]"
        });
        return td.append("<br>").append(a2);
      }
    };

    Gists.prototype.cell = function(tr, txt) {
      var td;
      td = $("<td>");
      tr.append(td);
      td.append(txt);
      return td;
    };

    Gists.prototype.date = function(str) {
      var d;
      d = new Date(str);
      return d.toLocaleString();
    };

    Gists.prototype.setCredentials = function() {
      var make_base_auth;
      console.log("username/key", this.username, this.key);
      make_base_auth = function(user, password) {
        var hash, tok;
        tok = user + ':' + password;
        hash = btoa(tok);
        return "Basic " + hash;
      };
      if (this.username && this.key) {
        return this.auth = make_base_auth(this.username, this.key);
      }
    };

    Gists.prototype.authBeforeSend = function(xhr) {
      if (!this.auth) {
        return;
      }
      console.log("Set request header", this.auth);
      return xhr.setRequestHeader('Authorization', this.auth);
    };

    return Gists;

  })();

  new Gists;

}).call(this);
